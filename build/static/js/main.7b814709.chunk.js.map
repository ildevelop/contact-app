{"version":3,"sources":["components/Table/Table.styled.js","components/Table/Table.js","components/ContactEditor/ContactEditor.styled.js","components/ContactEditor/ContactEditor.js","style/main.js","pages/Contacts/Contacts.js","pages/Help/Help.js","pages/About/About.js","routes.js","serviceWorker.js","index.js","components/App.js"],"names":["TableWrapper","styled","div","Title","TableHead","TableRow","item","Table","props","contactList","map","key","id","onClick","setSelected","firstName","lastName","birthday","Wrapper","DatePickerWrapper","DateTitle","ContactEditor","useState","Date","setBirthday","Form","size","className","Group","widths","Input","label","placeholder","defaultValue","selected","onChange","disabled","Button","primary","direction","margin","mockDB","Contacts","Help","extra","Icon","name","About","Card","image","header","meta","description","routes","path","exact","to","Boolean","window","location","hostname","match","ReactDOM","render","animated","basic","color","Content","visible","hidden","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7b814709.chunk.js","sourcesContent":["import styled from \"styled-components\";\nexport const TableWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n`;\nexport const Title = styled.div`\n  width: 33%;\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n`;\nexport const TableHead = styled(TableWrapper)`\n  background: #9e9f9f;\n`;\nexport const TableRow = styled(TableWrapper)`\n  background: ${({ item }) => (item ? \"#fff\" : \"#9e9f9f\")};\n  border-bottom: 1px solid #9e9f9f;\n  cursor: ${({ item }) => (item ? \"pointer\" : \"default\")};\n  &:hover {\n    background: ${({ item }) => (item ? \"#3aa9f4\" : \"none\")};\n  }\n`;\n","import React from \"react\";\nimport { Title, TableRow, TableHead } from \"./Table.styled\";\n\nfunction Table(props) {\n  return (\n    <div>\n      <TableHead>\n        <Title>First Name</Title>\n        <Title>Last Name</Title>\n        <Title>Birthday</Title>\n        <Title>Cell#</Title>\n      </TableHead>\n      {props.contactList.map(item => (\n        <TableRow item key={item.id} onClick={() => props.setSelected(item)}>\n          <Title item>{item.firstName}</Title>\n          <Title item>{item.lastName}</Title>\n          <Title item>{item.birthday}</Title>\n          <Title item>{item.id}</Title>\n        </TableRow>\n      ))}\n    </div>\n  );\n}\n\nexport default Table;\n","import styled from \"styled-components\";\nexport const Wrapper = styled.div`\n  padding: 50px;\n  margin-top: 50px;\n  border: 1px solid #9e9f9f;\n  .formWrapper {\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n  }\n  .saveBtn {\n    width: 100px;\n  }\n`;\nexport const DatePickerWrapper = styled.div`\n  .react-datepicker-wrapper {\n    width: 300px;\n  }\n`;\nexport const DateTitle = styled.div`\n  font-weight: bold;\n  font-size: 0.92857143em;\n  margin-bottom: 5px;\n`;\n","import React, { useState } from \"react\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport { Wrapper, DatePickerWrapper, DateTitle } from \"./ContactEditor.styled\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default function ContactEditor(props) {\n  const [birthday, setBirthday] = useState(new Date());\n  return (\n    <Wrapper>\n      <Form size=\"big\" className=\"formWrapper\">\n        <Form.Group widths=\"equal\">\n          <Form.Input\n            id=\"form-subcomponent-shorthand-input-first-name\"\n            label=\"First name\"\n            placeholder=\"First name\"\n            defaultValue={props.selected.firstName}\n          />\n\n          <DatePickerWrapper>\n            <DateTitle>Birthday</DateTitle>\n            <DatePicker onChange={setBirthday} selected={birthday} />\n          </DatePickerWrapper>\n        </Form.Group>\n        <Form.Group widths=\"equal\">\n          <Form.Input\n            id=\"form-subcomponent-shorthand-input-last-name\"\n            label=\"Last name\"\n            placeholder=\"Last name\"\n            defaultValue={props.selected.lastName}\n          />\n          <Form.Input\n            id=\"form-subcomponent-shorthand-input-id\"\n            label=\"Cell\"\n            defaultValue={props.selected.id}\n            disabled\n          />\n        </Form.Group>\n        <Button className=\"saveBtn\" primary>\n          Save\n        </Button>\n      </Form>\n    </Wrapper>\n  );\n}\n","import styled from \"styled-components\";\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: ${({ direction }) => (direction ? direction : \"row\")};\n  margin: ${({ margin }) => (margin ? margin : 0)};\n`;\nexport const Title = styled.div`\n  width: 33%;\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n`;\nexport const TableHead = styled(Wrapper)`\n  background: #9e9f9f;\n`;\nexport const TableRow = styled(Wrapper)`\n  background: ${({ item }) => (item ? \"#fff\" : \"#9e9f9f\")};\n  border-bottom: 1px solid #9e9f9f;\n  cursor: ${({ item }) => (item ? \"pointer\" : \"default\")};\n  &:hover {\n    background: ${({ item }) => (item ? \"#3aa9f4\" : \"none\")};\n  }\n`;\n","import React, { useState } from \"react\";\nimport Table from \"../../components/Table/Table\";\nimport ContactEditor from \"../../components/ContactEditor/ContactEditor\";\nimport { Wrapper } from \"../../style/main\";\nconst mockDB = [\n  { firstName: \"Ilya\", lastName: \"Radu\", birthday: \"18-09-89\", id: 135131313 },\n  { firstName: \"Max\", lastName: \"AAA\", birthday: \"18-09-89\", id: 135131322 },\n  { firstName: \"Tom\", lastName: \"BBB\", birthday: \"18-09-89\", id: 135131343 }\n];\nfunction Contacts() {\n  const [contactList] = useState(mockDB);\n  const [selected, setSelected] = useState({});\n  return (\n    <Wrapper direction=\"column\" margin=\"0 5%\">\n      <Table contactList={contactList} setSelected={setSelected} />\n      <ContactEditor selected={selected} />\n    </Wrapper>\n  );\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport { Button, Icon } from \"semantic-ui-react\";\n\nfunction Help() {\n  return (\n    <div>\n      <h1>Help</h1>\n    </div>\n  );\n}\n\nexport default Help;\n","import React from \"react\";\nimport { Card, Icon } from \"semantic-ui-react\";\nimport { Wrapper } from \"../../style/main\";\n\nconst extra = (\n  <a>\n    <Icon name=\"user\" />\n    16 Friends\n  </a>\n);\nfunction About() {\n  return (\n    <Wrapper>\n      <Card\n        image=\"https://react.semantic-ui.com/images/avatar/small/jenny.jpg\"\n        header=\"Elliot Baker\"\n        meta=\"0527456966\"\n        description=\"Elliot is a sound engineer living in Nashville who enjoys playing guitar and hanging with his cat.\"\n        extra={extra}\n      />\n    </Wrapper>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Contacts from \"./pages/Contacts/Contacts\";\nimport Help from \"./pages/Help/Help\";\nimport About from \"./pages/About/About\";\n\nfunction routes() {\n  return (\n    <Switch>\n      <Route path=\"/about\">\n        <About />\n      </Route>\n      <Route path=\"/help\">\n        <Help />\n      </Route>\n      <Route path=\"/contacts\">\n        <Contacts />\n      </Route>\n      <Route exact path=\"/\">\n        <Redirect to=\"/contacts\" />\n      </Route>\n    </Switch>\n  );\n}\nexport default routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport Routes from \"./../routes\";\nimport { Button, Icon } from \"semantic-ui-react\";\nimport { Wrapper } from \"./../style/main\";\n\nexport default function App() {\n  return (\n    <Router>\n      <Wrapper>\n        <Link to=\"/about\">\n          <Button animated=\"vertical\" basic color=\"purple\">\n            <Button.Content visible>About</Button.Content>\n            <Button.Content hidden>About</Button.Content>\n          </Button>\n        </Link>\n        <Link to=\"/help\">\n          <Button animated=\"vertical\" basic color=\"blue\">\n            <Button.Content visible>Help</Button.Content>\n            <Button.Content hidden>Help</Button.Content>\n          </Button>\n        </Link>\n        <Link to=\"/contacts\">\n          <Button animated=\"vertical\" basic color=\"yellow\">\n            <Button.Content visible>Contacts</Button.Content>\n            <Button.Content hidden>Contacts</Button.Content>\n          </Button>\n        </Link>\n      </Wrapper>\n      <br />\n      <Routes />\n    </Router>\n  );\n}\n"],"sourceRoot":""}